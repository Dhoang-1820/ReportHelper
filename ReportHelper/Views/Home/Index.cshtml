@{
    ViewBag.Title = "Home Page";
}
@model ReportHelper.Models.strQuery
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>


    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        <input type="text"  name="selectedItems" id="selectedItems" style="width: 100%;" />

    <style>
        .dropbox {
            width: 90%;
            height: 22px;
        }
       
    </style>
    <link href="~/Content/myStyle.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
    <script>
        const set = new Set()
        const parentFrom = new Set();
        $(function () {
            $('#jstree').on('changed.jstree', function (e, data) {
                var i, j;
                var query = "select "
                var from = "\nfrom "
                var arrField = []
                var arrTable = []
                var selectedItems = []
                for(i = 0, j = data.selected.length; i < j; i++) {
                    //Fetch the Id.
                    var id = data.selected[i];
                    //Remove the ParentId.
                    if(id.indexOf('-') != -1){
                        id = id.split("-")[1];
                    }
                    //Add the Node to the JSON Array.
                    selectedItems.push({
                        text: data.instance.get_node(data.selected[i]).text,
                        id: id,
                        parent: data.node.parents[0]
                    });
                    // đưa các field được chọn vào arrField
                    if (!data.instance.is_parent(data.selected[i]))
                        arrField.push(data.instance.get_node(data.selected[i]).text)
                    // hàm đưa vào table
                    function addRow() {
                        var table = document.getElementById("myTable");
                        var rowCount = table.rows.length;
                        var row = table.insertRow(rowCount);
                        var colCount = table.rows[0].cells.length;
                        for(var i=0; i<colCount; i++) {
                            var newcell	= row.insertCell(i);
                            newcell.innerHTML = table.rows[1].cells[i].innerHTML;
                            switch(newcell.childNodes[0].name){
                                case "field":
                                    newcell.childNodes[0].value = "Nhanvien"
                                    break
                                case "table":
                                    newcell.childNodes[0].value = "Ho"
                                    break
                            }
                        }
                    }
                    //addRow();
                }
                // lấy id node cha, dùng Set để tránh lặp lại.
                var allIdNodesPath = Object.keys(data.selected.reduce(function (acc, nodeId) {
                    var node = data.instance.get_node(nodeId);
                    node.parents.forEach(function (code) {
                        acc[code] = 1;
                    });
                    return acc;
                }, {}));
                // lấy tên các node cha từ iD đưa vào arrTable
                for (let i = 0; i < allIdNodesPath.length - 1; i++){
                    var pnode = data.instance.get_node(allIdNodesPath[i])
                    arrTable.push(pnode.text)
                }               
                // nối để tạo query
                from += arrTable.join(", ")
                query += arrField.join(", ")
                document.getElementById("selectQuery").value = query + from       
                
                //Serialize the JSON Array and save in HiddenField.
                $('#selectedItems').val(JSON.stringify(selectedItems));
            }).jstree({
                "core": {
                    "themes": {
                        "variant": "large"
                    },
                    "data": @Html.Raw(ViewBag.Json),
                },
                "checkbox": {
                    "keep_selected_style": false
                },
                "plugins": ["wholerow", "checkbox"],
            });
        })  

    </script>
    <div class="container">
        <div class="navbar">
            <div id="jstree">
            </div>
            <div class="content">
                <div>
                    <p id="abc"></p>
                    @*<textarea class="text" id="selectQuery" rows="20" cols="100" name="fullQuery"></textarea>*@
                    @Html.TextAreaFor(model => model.selectQuery, new { rows = 20, cols = 100})
                    @*<button class="btn" style="position: relative; bottom: 8px; height: 25px;">Execute Query</button>*@
                    <input type="submit" style="position: relative; bottom: 8px; height: 25px;" value="Execute Query"/>
                    @*onclick="location.href='@Url.Action("Report", "Home")'*@
                </div>
                <table class="table1" style="width: 100%;" id="myTable">
                    <tr style="background-color:gray;">
                        <th style="width: 20%;">Field</th>
                        <th style="width: 20%;">Table</th>
                        <th style="width: 15%;">Funtion</th>
                        <th style="width: 15%;">Sort</th>
                        <th style="width: 20%;">Criteria</th>
                    </tr>
                    <tr>
                        <td><input type="text" disabled style="border: 0; padding: 0; text-align: center; color: black" name="field"/></td>
                        <td><input type="text" disabled style="border: 0; padding: 0; text-align: center; color: black" name="table"/></td>
                        <td>
                            <select class="dropbox">
                                <option value="None">None</option>
                                <option value="Count">Count</option>
                                <option value="Sum">Sum</option>
                                <option value="Min">Min</option>
                                <option value="Max">Max</option>
                                <option value="Avg">Avg</option>
                                <option value="Group By">Group By</option>
                            </select>
                        </td>
                        <td>
                            <select class="dropbox">
                                <option value="None">None</option>
                                <option value="Ascending">Ascending</option>
                                <option value="Descending">Descending</option>
                            </select>
                        </td>
                        <td>
                            <input style="height: 19px; padding: 0;">
                        </td>
                    </tr>

                </table>
            </div>
        </div>
        <p>@ViewBag.Error</p>
    </div>
    }
</body>
</html>
    